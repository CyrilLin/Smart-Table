{"version":3,"sources":["smart-table.min.js"],"names":["ng","undefined","module","run","$templateCache","put","constant","pagination","template","itemsByPage","displayedPages","search","delay","inputEvent","select","mode","selectedClass","sort","ascentClass","descentClass","descendingFirst","skipNatural","pipe","controller","$scope","$parse","$filter","$attrs","copyRefs","src","concat","updateSafeCopy","safeCopy","safeGetter","pipeAfterSafeCopy","ctrl","deepDelete","object","path","indexOf","partials","split","key","pop","parentPath","join","parentObject","Object","keys","length","filtered","lastSelected","propertyName","stTable","displayGetter","displaySetter","assign","orderBy","filter","tableState","start","totalItemCount","this","stSafeSrc","$watch","safeSrc","newValue","oldValue","sortBy","predicate","reverse","isFunction","functionName","name","input","comparator","predicateObject","prop","isString","trim","output","number","numberOfPages","Math","ceil","slice","parseInt","row","rows","index","isSelected","getFilteredCollection","setFilterFunction","filterName","setSortFunction","sortFunctionName","preventPipeOnWatch","directive","restrict","link","scope","element","attr","stSetFilter","stSetSort","stConfig","$timeout","require","tableCtrl","promise","throttle","stDelay","event","stInputEvent","$observe","value","predicateExpression","stSearch","bind","evt","originalEvent","cancel","target","stSelectMode","$apply","addClass","removeClass","func","getter","isArray","stSort","sortDefault","classAscent","stClassAscent","classDescent","stClassDescent","stateClasses","stSkipNatural","stDescendingFirst","stSortDefault","$eval","stItemsByPage","stDisplayedPages","stPageChange","templateUrl","attrs","stTemplate","redraw","end","i","paginationState","prevPage","currentPage","numberOfElements","floor","max","abs","pages","numPages","push","newPage","selectPage","page","jumpPage","config","stPipe","pre","pipePromise","post","angular"],"mappings":"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","file":"smart-table.min.js","sourcesContent":["(function (ng, undefined){\r\n    'use strict';\r\n\nng.module('smart-table', []).run(['$templateCache', function ($templateCache) {\r\n\t$templateCache.put('template/smart-table/pagination.html',\r\n\t\t'<nav ng-if=\"numPages && pages.length >= 2\" aria-label=\"...\" class=\"clearfix\">' +\r\n\t\t'<a style=\"    padding: 6px 12px;\\n' +\r\n\t\t'    border: 1px solid #d6d6d6;\\n' +\r\n\t\t'    border-radius: 5px;\\n' +\r\n\t\t'    margin-right: 15px;\" ng-click=\"selectPage(1)\">首页</a>' +\r\n\t\t'<ul class=\"pagination\">' +\r\n\t\t'<li ng-repeat=\"page in pages\" ng-class=\"{active: page==currentPage}\">' +\r\n\t\t'<a href=\"javascript: void(0);\" ng-click=\"selectPage(page)\">{{page}}</a>' +\r\n\t\t'</li>' +\r\n\t\t'</ul>' +\r\n\t\t'<span style=\"margin-left: 15px;\">' +\r\n\t\t'<a style=\"    padding: 6px 12px;\\n' +\r\n\t\t'    border: 1px solid #d6d6d6;\\n' +\r\n\t\t'    border-radius: 5px;\\n' +\r\n\t\t'    margin-right: 10px;\" ng-click=\"selectPage(numPages)\">尾页</a>' +\r\n\t\t'<input type=\"text\" ng-model=\"jumpPage\" style=\"display: inline-block;\\n' +\r\n\t\t'    width: 5rem;\\n' +\r\n\t\t'    border: 1px solid rgb(214, 214, 214);\\n' +\r\n\t\t'    border-radius: 5px;\\n' +\r\n\t\t'    text-align: center;\\n' +\r\n\t\t'    padding: 6px 12px;\"><a style=\"margin-right: 10px;margin-left: 5px;cursor: pointer;\" ng-click=\"selectPage(jumpPage)\">跳转</a>' +\r\n\t\t'<span>共{{numPages}}页</span>' +\r\n\t\t'<span style=\"margin-left: 10px\">{{numberOfElements}}/{{totalItemCount}}条</span>' +\r\n\t\t'</span>' +\r\n\t\t'</nav>'\r\n\t);\r\n}]);\r\n\r\n\nng.module('smart-table')\r\n  .constant('stConfig', {\r\n    pagination: {\r\n      template: 'template/smart-table/pagination.html',\r\n      itemsByPage: 10,\r\n      displayedPages: 5\r\n    },\r\n    search: {\r\n      delay: 400, // ms\r\n      inputEvent: 'input'\r\n    },\r\n    select: {\r\n      mode: 'single',\r\n      selectedClass: 'st-selected'\r\n    },\r\n    sort: {\r\n      ascentClass: 'st-sort-ascent',\r\n      descentClass: 'st-sort-descent',\r\n      descendingFirst: false,\r\n      skipNatural: false,\r\n      delay:300\r\n    },\r\n    pipe: {\r\n      delay: 100 //ms\r\n    }\r\n  });\nng.module('smart-table').controller('stTableController', [\r\n  '$scope',\r\n  '$parse',\r\n  '$filter',\r\n  '$attrs',\r\n  function StTableController($scope, $parse, $filter, $attrs) {\r\n    var propertyName = $attrs.stTable;\r\n    var displayGetter = $parse(propertyName);\r\n    var displaySetter = displayGetter.assign;\r\n    var safeGetter;\r\n    var orderBy = $filter('orderBy');\r\n    var filter = $filter('filter');\r\n    var safeCopy = copyRefs(displayGetter($scope));\r\n    var tableState = {\r\n      sort: {},\r\n      search: {},\r\n      pagination: { start: 0, totalItemCount: 0 }\r\n    };\r\n    var filtered;\r\n    var pipeAfterSafeCopy = true;\r\n    var ctrl = this;\r\n    var lastSelected;\r\n\r\n    function copyRefs(src) {\r\n      return src ? [].concat(src) : [];\r\n    }\r\n\r\n    function updateSafeCopy() {\r\n      safeCopy = copyRefs(safeGetter($scope));\r\n      if (pipeAfterSafeCopy === true) {\r\n        ctrl.pipe();\r\n      }\r\n    }\r\n\r\n    function deepDelete(object, path) {\r\n      if (path.indexOf('.') != -1) {\r\n        var partials = path.split('.');\r\n        var key = partials.pop();\r\n        var parentPath = partials.join('.');\r\n        var parentObject = $parse(parentPath)(object);\r\n        delete parentObject[key];\r\n        if (Object.keys(parentObject).length == 0) {\r\n          deepDelete(object, parentPath);\r\n        }\r\n      } else {\r\n        delete object[path];\r\n      }\r\n    }\r\n\r\n    if ($attrs.stSafeSrc) {\r\n      safeGetter = $parse($attrs.stSafeSrc);\r\n      $scope.$watch(\r\n        function() {\r\n          var safeSrc = safeGetter($scope);\r\n          return safeSrc && safeSrc.length ? safeSrc[0] : undefined;\r\n        },\r\n        function(newValue, oldValue) {\r\n          if (newValue !== oldValue) {\r\n            updateSafeCopy();\r\n          }\r\n        }\r\n      );\r\n      $scope.$watch(\r\n        function() {\r\n          var safeSrc = safeGetter($scope);\r\n          return safeSrc ? safeSrc.length : 0;\r\n        },\r\n        function(newValue, oldValue) {\r\n          if (newValue !== safeCopy.length) {\r\n            updateSafeCopy();\r\n          }\r\n        }\r\n      );\r\n      $scope.$watch(\r\n        function() {\r\n          return safeGetter($scope);\r\n        },\r\n        function(newValue, oldValue) {\r\n          if (newValue !== oldValue) {\r\n            tableState.pagination.start = 0;\r\n            updateSafeCopy();\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    /**\r\n     * sort the rows\r\n     * @param {Function | String} predicate - function or string which will be used as predicate for the sorting\r\n     * @param [reverse] - if you want to reverse the order\r\n     */\r\n    this.sortBy = function sortBy(predicate, reverse) {\r\n      tableState.sort.predicate = predicate;\r\n      tableState.sort.reverse = reverse === true;\r\n\r\n      if (ng.isFunction(predicate)) {\r\n        tableState.sort.functionName = predicate.name;\r\n      } else {\r\n        delete tableState.sort.functionName;\r\n      }\r\n\r\n      tableState.pagination.start = 0;\r\n      return this.pipe();\r\n    };\r\n\r\n    /**\r\n     * search matching rows\r\n     * @param {String} input - the input string\r\n     * @param {String} [predicate] - the property name against you want to check the match, otherwise it will search on all properties\r\n     * @param {String | Function } [comparator] - a comparator to pass to the filter for the (pass true for stric mode)\r\n     */\r\n    this.search = function search(input, predicate, comparator) {\r\n      var predicateObject = tableState.search.predicateObject || {};\r\n      var prop = predicate ? predicate : '$';\r\n\r\n      input = ng.isString(input) ? input.trim() : input;\r\n      $parse(prop).assign(predicateObject, input);\r\n      // to avoid to filter out null value\r\n      if (!input) {\r\n        deepDelete(predicateObject, prop);\r\n      }\r\n      tableState.search.predicateObject = predicateObject;\r\n      tableState.pagination.start = 0;\r\n      return this.pipe();\r\n    };\r\n\r\n    /**\r\n     * this will chain the operations of sorting and filtering based on the current table state (sort options, filtering, ect)\r\n     */\r\n    this.pipe = function pipe() {\r\n      var pagination = tableState.pagination;\r\n      var output;\r\n      filtered = tableState.search.predicateObject\r\n        ? filter(safeCopy, tableState.search.predicateObject)\r\n        : safeCopy;\r\n      if (tableState.sort.predicate) {\r\n        filtered = orderBy(\r\n          filtered,\r\n          tableState.sort.predicate,\r\n          tableState.sort.reverse\r\n        );\r\n      }\r\n      pagination.totalItemCount = filtered.length;\r\n      if (pagination.number !== undefined) {\r\n        pagination.numberOfPages = filtered.length > 0\r\n          ? Math.ceil(filtered.length / pagination.number)\r\n          : 1;\r\n        pagination.start = pagination.start >= filtered.length\r\n          ? (pagination.numberOfPages - 1) * pagination.number\r\n          : pagination.start;\r\n        output = filtered.slice(\r\n          pagination.start,\r\n          pagination.start + parseInt(pagination.number)\r\n        );\r\n      }\r\n      displaySetter($scope, output || filtered);\r\n    };\r\n\r\n    /**\r\n     * select a dataRow (it will add the attribute isSelected to the row object)\r\n     * @param {Object} row - the row to select\r\n     * @param {String} [mode] - \"single\" or \"multiple\" (multiple by default)\r\n     */\r\n    this.select = function select(row, mode) {\r\n      var rows = copyRefs(displayGetter($scope));\r\n      var index = rows.indexOf(row);\r\n      if (index !== -1) {\r\n        if (mode === 'single') {\r\n          row.isSelected = row.isSelected !== true;\r\n          if (lastSelected) {\r\n            lastSelected.isSelected = false;\r\n          }\r\n          lastSelected = row.isSelected === true ? row : undefined;\r\n        } else {\r\n          rows[index].isSelected = !rows[index].isSelected;\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * take a slice of the current sorted/filtered collection (pagination)\r\n     *\r\n     * @param {Number} start - start index of the slice\r\n     * @param {Number} number - the number of item in the slice\r\n     */\r\n    this.slice = function splice(start, number) {\r\n      tableState.pagination.start = start;\r\n      tableState.pagination.number = number;\r\n      return this.pipe();\r\n    };\r\n\r\n    /**\r\n     * return the current state of the table\r\n     * @returns {{sort: {}, search: {}, pagination: {start: number}}}\r\n     */\r\n    this.tableState = function getTableState() {\r\n      return tableState;\r\n    };\r\n\r\n    this.getFilteredCollection = function getFilteredCollection() {\r\n      return filtered || safeCopy;\r\n    };\r\n\r\n    /**\r\n     * Use a different filter function than the angular FilterFilter\r\n     * @param filterName the name under which the custom filter is registered\r\n     */\r\n    this.setFilterFunction = function setFilterFunction(filterName) {\r\n      filter = $filter(filterName);\r\n    };\r\n\r\n    /**\r\n     * Use a different function than the angular orderBy\r\n     * @param sortFunctionName the name under which the custom order function is registered\r\n     */\r\n    this.setSortFunction = function setSortFunction(sortFunctionName) {\r\n      orderBy = $filter(sortFunctionName);\r\n    };\r\n\r\n    /**\r\n     * Usually when the safe copy is updated the pipe function is called.\r\n     * Calling this method will prevent it, which is something required when using a custom pipe function\r\n     */\r\n    this.preventPipeOnWatch = function preventPipe() {\r\n      pipeAfterSafeCopy = false;\r\n    };\r\n  }\r\n]).directive('stTable', function() {\r\n  return {\r\n    restrict: 'A',\r\n    controller: 'stTableController',\r\n    link: function(scope, element, attr, ctrl) {\r\n      if (attr.stSetFilter) {\r\n        ctrl.setFilterFunction(attr.stSetFilter);\r\n      }\r\n\r\n      if (attr.stSetSort) {\r\n        ctrl.setSortFunction(attr.stSetSort);\r\n      }\r\n    }\r\n  };\r\n});\r\n\nng.module('smart-table')\r\n  .directive('stSearch', ['stConfig', '$timeout','$parse', function (stConfig, $timeout, $parse) {\r\n    return {\r\n      require: '^stTable',\r\n      link: function (scope, element, attr, ctrl) {\r\n        var tableCtrl = ctrl;\r\n        var promise = null;\r\n        var throttle = attr.stDelay || stConfig.search.delay;\r\n        var event = attr.stInputEvent || stConfig.search.inputEvent;\r\n\r\n        attr.$observe('stSearch', function (newValue, oldValue) {\r\n          var input = element[0].value;\r\n          if (newValue !== oldValue && input) {\r\n            ctrl.tableState().search = {};\r\n            tableCtrl.search(input, newValue);\r\n          }\r\n        });\r\n\r\n        //table state -> view\r\n        scope.$watch(function () {\r\n          return ctrl.tableState().search;\r\n        }, function (newValue, oldValue) {\r\n          var predicateExpression = attr.stSearch || '$';\r\n          if (newValue.predicateObject && $parse(predicateExpression)(newValue.predicateObject) !== element[0].value) {\r\n            element[0].value = $parse(predicateExpression)(newValue.predicateObject) || '';\r\n          }\r\n        }, true);\r\n\r\n        // view -> table state\r\n        element.bind(event, function (evt) {\r\n          evt = evt.originalEvent || evt;\r\n          if (promise !== null) {\r\n            $timeout.cancel(promise);\r\n          }\r\n\r\n          promise = $timeout(function () {\r\n            tableCtrl.search(evt.target.value, attr.stSearch || '');\r\n            promise = null;\r\n          }, throttle);\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n\nng.module('smart-table')\r\n  .directive('stSelectRow', ['stConfig', function (stConfig) {\r\n    return {\r\n      restrict: 'A',\r\n      require: '^stTable',\r\n      scope: {\r\n        row: '=stSelectRow'\r\n      },\r\n      link: function (scope, element, attr, ctrl) {\r\n        var mode = attr.stSelectMode || stConfig.select.mode;\r\n        element.bind('click', function () {\r\n          scope.$apply(function () {\r\n            ctrl.select(scope.row, mode);\r\n          });\r\n        });\r\n\r\n        scope.$watch('row.isSelected', function (newValue) {\r\n          if (newValue === true) {\r\n            element.addClass(stConfig.select.selectedClass);\r\n          } else {\r\n            element.removeClass(stConfig.select.selectedClass);\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n\nng.module('smart-table')\r\n  .directive('stSort', ['stConfig', '$parse', '$timeout', function (stConfig, $parse, $timeout) {\r\n    return {\r\n      restrict: 'A',\r\n      require: '^stTable',\r\n      link: function (scope, element, attr, ctrl) {\r\n\r\n        var predicate = attr.stSort;\r\n        var getter = $parse(predicate);\r\n        var index = 0;\r\n        var classAscent = attr.stClassAscent || stConfig.sort.ascentClass;\r\n        var classDescent = attr.stClassDescent || stConfig.sort.descentClass;\r\n        var stateClasses = [classAscent, classDescent];\r\n        var sortDefault;\r\n        var skipNatural = attr.stSkipNatural !== undefined ? attr.stSkipNatural : stConfig.sort.skipNatural;\r\n        var descendingFirst = attr.stDescendingFirst !== undefined ? attr.stDescendingFirst : stConfig.sort.descendingFirst;\r\n        var promise = null;\r\n        var throttle = attr.stDelay || stConfig.sort.delay;\r\n\r\n        if (attr.stSortDefault) {\r\n          sortDefault = scope.$eval(attr.stSortDefault) !== undefined ? scope.$eval(attr.stSortDefault) : attr.stSortDefault;\r\n        }\r\n\r\n        //view --> table state\r\n        function sort () {\r\n          if (descendingFirst) {\r\n            index = index === 0 ? 2 : index - 1;\r\n          } else {\r\n            index++;\r\n          }\r\n\r\n          var func;\r\n          predicate = ng.isFunction(getter(scope)) || ng.isArray(getter(scope)) ? getter(scope) : attr.stSort;\r\n          if (index % 3 === 0 && !!skipNatural !== true) {\r\n            //manual reset\r\n            index = 0;\r\n            ctrl.tableState().sort = {};\r\n            ctrl.tableState().pagination.start = 0;\r\n            func = ctrl.pipe.bind(ctrl);\r\n          } else {\r\n            func = ctrl.sortBy.bind(ctrl, predicate, index % 2 === 0);\r\n          }\r\n          if (promise !== null) {\r\n            $timeout.cancel(promise);\r\n          }\r\n          if (throttle < 0) {\r\n            func();\r\n          } else {\r\n            promise = $timeout(function(){\r\n              func();\r\n            }, throttle);\r\n          }\r\n        }\r\n\r\n        element.bind('click', function sortClick () {\r\n          if (predicate) {\r\n            scope.$apply(sort);\r\n          }\r\n        });\r\n\r\n        if (sortDefault) {\r\n          index = sortDefault === 'reverse' ? 1 : 0;\r\n          sort();\r\n        }\r\n\r\n        //table state --> view\r\n        scope.$watch(function () {\r\n          return ctrl.tableState().sort;\r\n        }, function (newValue) {\r\n          if (newValue.predicate !== predicate) {\r\n            index = 0;\r\n            element\r\n              .removeClass(classAscent)\r\n              .removeClass(classDescent);\r\n          } else {\r\n            index = newValue.reverse === true ? 2 : 1;\r\n            element\r\n              .removeClass(stateClasses[index % 2])\r\n              .addClass(stateClasses[index - 1]);\r\n          }\r\n        }, true);\r\n      }\r\n    };\r\n  }]);\r\n\nng.module('smart-table')\r\n\t.directive('stPagination', ['stConfig', function (stConfig) {\r\n\t\treturn {\r\n\t\t\trestrict: 'EA',\r\n\t\t\trequire: '^stTable',\r\n\t\t\tscope: {\r\n\t\t\t\tstItemsByPage: '=?',\r\n\t\t\t\tstDisplayedPages: '=?',\r\n\t\t\t\tstPageChange: '&'\r\n\t\t\t},\r\n\t\t\ttemplateUrl: function (element, attrs) {\r\n\t\t\t\tif (attrs.stTemplate) {\r\n\t\t\t\t\treturn attrs.stTemplate;\r\n\t\t\t\t}\r\n\t\t\t\treturn stConfig.pagination.template;\r\n\t\t\t},\r\n\t\t\tlink: function (scope, element, attrs, ctrl) {\r\n\r\n\t\t\t\tscope.stItemsByPage = scope.stItemsByPage ? +(scope.stItemsByPage) : stConfig.pagination.itemsByPage;\r\n\t\t\t\tscope.stDisplayedPages = scope.stDisplayedPages ? +(scope.stDisplayedPages) : stConfig.pagination.displayedPages;\r\n\r\n\t\t\t\tscope.currentPage = 1;\r\n\t\t\t\tscope.pages = [];\r\n\r\n\t\t\t\tfunction redraw() {\r\n\t\t\t\t\tvar paginationState = ctrl.tableState().pagination;\r\n\t\t\t\t\tvar start = 1;\r\n\t\t\t\t\tvar end;\r\n\t\t\t\t\tvar i;\r\n\t\t\t\t\tvar prevPage = scope.currentPage;\r\n\t\t\t\t\tscope.totalItemCount = paginationState.totalItemCount;\r\n\t\t\t\t\tscope.numberOfElements = paginationState.numberOfElements;\r\n\t\t\t\t\tscope.currentPage = Math.floor(paginationState.start / paginationState.number) + 1;\r\n\r\n\t\t\t\t\tstart = Math.max(start, scope.currentPage - Math.abs(Math.floor(scope.stDisplayedPages / 2)));\r\n\t\t\t\t\tend = start + scope.stDisplayedPages;\r\n\r\n\t\t\t\t\tif (end > paginationState.numberOfPages) {\r\n\t\t\t\t\t\tend = paginationState.numberOfPages + 1;\r\n\t\t\t\t\t\tstart = Math.max(1, end - scope.stDisplayedPages);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.pages = [];\r\n\t\t\t\t\tscope.numPages = paginationState.numberOfPages;\r\n\r\n\t\t\t\t\tfor (i = start; i < end; i++) {\r\n\t\t\t\t\t\tscope.pages.push(i);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (prevPage !== scope.currentPage) {\r\n\t\t\t\t\t\tscope.stPageChange({newPage: scope.currentPage});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//table state --> view\r\n\t\t\t\tscope.$watch(function () {\r\n\t\t\t\t\treturn ctrl.tableState().pagination;\r\n\t\t\t\t}, redraw, true);\r\n\r\n\t\t\t\t//scope --> table state  (--> view)\r\n\t\t\t\tscope.$watch('stItemsByPage', function (newValue, oldValue) {\r\n\t\t\t\t\tif (newValue !== oldValue) {\r\n\t\t\t\t\t\tscope.selectPage(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tscope.$watch('stDisplayedPages', redraw);\r\n\r\n\t\t\t\t//view -> table state\r\n\t\t\t\tscope.selectPage = function (page) {\r\n\t\t\t\t\tif (page > 0 && page <= scope.numPages) {\r\n\t\t\t\t\t\tctrl.slice((page - 1) * scope.stItemsByPage, scope.stItemsByPage);\r\n\t\t\t\t\t\tscope.jumpPage = page;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (!ctrl.tableState().pagination.number) {\r\n\t\t\t\t\tctrl.slice(0, scope.stItemsByPage);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}]);\r\n\nng.module('smart-table')\r\n  .directive('stPipe', ['stConfig', '$timeout', function (config, $timeout) {\r\n    return {\r\n      require: 'stTable',\r\n      scope: {\r\n        stPipe: '='\r\n      },\r\n      link: {\r\n\r\n        pre: function (scope, element, attrs, ctrl) {\r\n\r\n          var pipePromise = null;\r\n\r\n          if (ng.isFunction(scope.stPipe)) {\r\n            ctrl.preventPipeOnWatch();\r\n            ctrl.pipe = function () {\r\n\r\n              if (pipePromise !== null) {\r\n                $timeout.cancel(pipePromise)\r\n              }\r\n\r\n              pipePromise = $timeout(function () {\r\n                scope.stPipe(ctrl.tableState(), ctrl);\r\n              }, config.pipe.delay);\r\n\r\n              return pipePromise;\r\n            }\r\n          }\r\n        },\r\n\r\n        post: function (scope, element, attrs, ctrl) {\r\n          ctrl.pipe();\r\n        }\r\n      }\r\n    };\r\n  }]);\r\n\n})(angular);"]}